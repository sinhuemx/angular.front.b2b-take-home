{"version":3,"file":"apz-shared-ui.mjs","sources":["../../src/lib/directives/click-outside.directive.ts","../../src/lib/directives/element-appearance.directive.ts","../../src/lib/directives/element-color.directive.ts","../../src/lib/directives/element-common-size.directive.ts","../../src/lib/directives/element-disabled.directive.ts","../../src/lib/directives/element-prevent-click.directive.ts","../../src/lib/directives/lower-case-text.directive.ts","../../src/lib/directives/no-white-space.directive.ts","../../src/lib/entities/screens.ts","../../src/lib/services/match-media.service.ts","../../src/apz-shared-ui.ts"],"sourcesContent":["import {\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  inject,\r\n  Output,\r\n} from '@angular/core';\r\n\r\n/**\r\n *\r\n * idea from\r\n * https://plainenglish.io/blog/creating-an-angular-directive-to-detect-clicking-outside-an-object-afd6c07212ef\r\n */\r\n@Directive({\r\n  selector: '[aplzClickOutside]',\r\n  exportAs: 'clickOutside',\r\n  standalone: true,\r\n  host: {\r\n    '(document:click)': '__onClick($event, $event.target)',\r\n  },\r\n})\r\nexport class AplazoClickOutsideDirective {\r\n  readonly #elementRef: ElementRef<HTMLElement> = inject(ElementRef);\r\n\r\n  @Output() clickOutside = new EventEmitter<MouseEvent>();\r\n\r\n  __onClick(event: MouseEvent, targetElement: HTMLElement): void {\r\n    if (!targetElement) {\r\n      return;\r\n    }\r\n    const clickedInside =\r\n      this.#elementRef.nativeElement.contains(targetElement);\r\n    if (!clickedInside) {\r\n      this.clickOutside.emit(event);\r\n    }\r\n  }\r\n}\r\n","import { Directive, HostBinding, Input } from '@angular/core';\r\n\r\nexport const ELEMENT_APPEARANCES = ['solid', 'stroked', 'basic'] as const;\r\nexport type ElementAppearance = typeof ELEMENT_APPEARANCES[number];\r\n\r\n@Directive({\r\n  selector: '[aplzAppearance]',\r\n  standalone: true,\r\n})\r\nexport class AplazoElementAppearanceDirective {\r\n  @Input()\r\n  set aplzAppearance(value: ElementAppearance | null) {\r\n    if (value == null || !ELEMENT_APPEARANCES.includes(value)) {\r\n      this.#appearance = 'aplazo-element-appearance--basic';\r\n\r\n      return;\r\n    }\r\n\r\n    switch (value) {\r\n      case 'solid':\r\n        this.#appearance = 'aplazo-element-appearance--solid';\r\n        break;\r\n      case 'stroked':\r\n        this.#appearance = 'aplazo-element-appearance--stroked';\r\n        break;\r\n      case 'basic':\r\n      default:\r\n        this.#appearance = 'aplazo-element-appearance--basic';\r\n    }\r\n  }\r\n\r\n  @HostBinding('class')\r\n  get class() {\r\n    return this.#appearance;\r\n  }\r\n  #appearance: `aplazo-element-appearance--${ElementAppearance}` =\r\n    'aplazo-element-appearance--basic';\r\n}\r\n","import { Directive, HostBinding, Input } from '@angular/core';\r\n\r\nexport const ELEMENT_COLORS = [\r\n  'light',\r\n  'dark',\r\n  'aplazo',\r\n  'accent',\r\n  'success',\r\n  'danger',\r\n  'warning',\r\n  'info',\r\n  'disabled',\r\n] as const;\r\nexport type ElementColor = typeof ELEMENT_COLORS[number];\r\n\r\n@Directive({\r\n  selector: '[aplzColor]',\r\n  standalone: true,\r\n})\r\nexport class AplazoElementColorDirective {\r\n  @Input()\r\n  set aplzColor(value: ElementColor | null) {\r\n    if (value == null || !ELEMENT_COLORS.includes(value)) {\r\n      this.#color = 'aplazo-element-color--light';\r\n\r\n      return;\r\n    }\r\n\r\n    switch (value) {\r\n      case 'dark':\r\n        this.#color = 'aplazo-element-color--dark';\r\n        break;\r\n      case 'aplazo':\r\n        this.#color = 'aplazo-element-color--aplazo';\r\n        break;\r\n      case 'accent':\r\n        this.#color = 'aplazo-element-color--accent';\r\n        break;\r\n      case 'success':\r\n        this.#color = 'aplazo-element-color--success';\r\n        break;\r\n      case 'danger':\r\n        this.#color = 'aplazo-element-color--danger';\r\n        break;\r\n      case 'warning':\r\n        this.#color = 'aplazo-element-color--warning';\r\n        break;\r\n      case 'info':\r\n        this.#color = 'aplazo-element-color--info';\r\n        break;\r\n      case 'disabled':\r\n        this.#color = 'aplazo-element-color--disabled';\r\n        break;\r\n      case 'light':\r\n      default:\r\n        this.#color = 'aplazo-element-color--light';\r\n    }\r\n  }\r\n\r\n  @HostBinding('class')\r\n  get class() {\r\n    return this.#color;\r\n  }\r\n  #color: `aplazo-element-color--${ElementColor}` =\r\n    'aplazo-element-color--light';\r\n}\r\n","import { Directive, HostBinding, Input } from '@angular/core';\r\n\r\nexport const COMMON_SIZE = ['xs', 'sm', 'md', 'lg', 'xl', '2xl'] as const;\r\nexport type CommonSize = typeof COMMON_SIZE[number];\r\n\r\n@Directive({\r\n  selector: '[aplzCommonSize]',\r\n  standalone: true,\r\n})\r\nexport class AplazoCommonSizeDirective {\r\n  @Input()\r\n  set size(value: CommonSize | null) {\r\n    if (value == null || !COMMON_SIZE.includes(value)) {\r\n      this.#classSize = '';\r\n      return;\r\n    }\r\n\r\n    switch (value) {\r\n      case 'xs':\r\n        this.#classSize = 'aplazo-element-size--xs';\r\n        break;\r\n      case 'sm':\r\n        this.#classSize = 'aplazo-element-size--sm';\r\n        break;\r\n      case 'md':\r\n        this.#classSize = 'aplazo-element-size--md';\r\n        break;\r\n      case 'lg':\r\n        this.#classSize = 'aplazo-element-size--lg';\r\n        break;\r\n      case 'xl':\r\n        this.#classSize = 'aplazo-element-size--xl';\r\n        break;\r\n      case '2xl':\r\n        this.#classSize = 'aplazo-element-size--2xl';\r\n        break;\r\n      default:\r\n        this.#classSize = '';\r\n    }\r\n  }\r\n\r\n  @HostBinding('class')\r\n  get class(): string {\r\n    return this.#classSize;\r\n  }\r\n  #classSize: `aplazo-element-size--${CommonSize}` | '' = '';\r\n}\r\n","import { Directive, HostBinding, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[aplazoElementDisabled]',\r\n  standalone: true,\r\n})\r\nexport class AplazoElementDisabledDirective {\r\n  @HostBinding('class.disabled')\r\n  @Input()\r\n  disabled = false;\r\n\r\n  @HostBinding('attr.disabled')\r\n  protected get nativeDisabled(): '' | null {\r\n    return this.disabled ? '' : null;\r\n  }\r\n}\r\n","import { Directive, HostListener, inject } from '@angular/core';\r\nimport { AplazoElementDisabledDirective } from './element-disabled.directive';\r\n\r\n@Directive({\r\n  selector: '[aplazoElementPreventClick]',\r\n  standalone: true,\r\n})\r\nexport class AplazoElementPreventClickDirective {\r\n  readonly #disabledDirective = inject(AplazoElementDisabledDirective, {\r\n    optional: true,\r\n    self: true,\r\n  });\r\n\r\n  @HostListener('click', ['$event'])\r\n  @HostListener('dblclick', ['$event'])\r\n  onClick(e: Event) {\r\n    if (this.#disabledDirective?.disabled) {\r\n      e.preventDefault();\r\n      e.stopImmediatePropagation();\r\n    }\r\n  }\r\n}\r\n","/* eslint-disable @angular-eslint/no-host-metadata-property */\r\nimport { Directive, ElementRef, inject } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  standalone: true,\r\n  selector: 'input[aplazoLowercase]',\r\n  host: {\r\n    '(input)': 'sanitizeValue($event)',\r\n  },\r\n})\r\nexport class AplazoLowercaseDirective {\r\n  readonly #elementRef: ElementRef<HTMLInputElement> = inject(ElementRef);\r\n  readonly #ngControl = inject(NgControl, {\r\n    self: true,\r\n    optional: true,\r\n  });\r\n\r\n  sanitizeValue(event: InputEvent): void {\r\n    // TODO: sanitize the value to lowercase\r\n    // TODO: propagate the value to the NgControl\r\n    // TODO: preserve the cursor position\r\n  }\r\n}\r\n","/* eslint-disable @angular-eslint/no-host-metadata-property */\r\nimport { Directive, ElementRef, inject } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\n@Directive({\r\n  standalone: true,\r\n  selector: 'input[aplazoNoWhiteSpace]',\r\n  host: {\r\n    '(input)': 'sanitizeValue()',\r\n  },\r\n})\r\nexport class AplazoNoWhiteSpaceDirective {\r\n  readonly #elementRef: ElementRef<HTMLInputElement> = inject(ElementRef);\r\n  readonly #ngControl = inject(NgControl, {\r\n    self: true,\r\n    optional: true,\r\n  });\r\n\r\n  sanitizeValue(): void {\r\n    // TODO: sanitize the value to remove white spaces\r\n    // TODO: propagate the value to the NgControl\r\n    // TODO: preserve the cursor position\r\n  }\r\n}\r\n","/** Must be the same as in tailwind screens preset */\r\nexport const SCREENS = {\r\n  xs: '375px',\r\n  sm: '540px',\r\n  md: '720px',\r\n  lg: '960px',\r\n  xl: '1140px',\r\n  '2xl': '1320px',\r\n  '3xl': '1440px',\r\n  '4xl': '1680px',\r\n  '5xl': '1920px',\r\n} as const;\r\n\r\nexport type Screen = typeof SCREENS[keyof typeof SCREENS];\r\n\r\nexport type MediaQueryScreen = `screen and (min-width: ${Screen})`;\r\n\r\nexport interface MediaQueryResult {\r\n  matches: boolean;\r\n}\r\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\r\nimport { Injectable, PLATFORM_ID, inject } from '@angular/core';\r\nimport {\r\n  Observable,\r\n  combineLatest,\r\n  fromEvent,\r\n  map,\r\n  of,\r\n  shareReplay,\r\n  startWith,\r\n} from 'rxjs';\r\nimport { MediaQueryScreen, MediaQueryResult, SCREENS } from '../entities/screens';\r\n\r\n\r\n/** Simple service to match screen media queries\r\n *\r\n * Only works in the browser, so it's important to use it only in components.\r\n *\r\n * The screen sizes are the same as in tailwind screens preset.\r\n * and we have an entity that describes the screen sizes within entities/screens.ts\r\n *\r\n * inspired by:\r\n * https://admin.indepth.dev/responsive-angular/\r\n *\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class AplazoMatchMediaService {\r\n  readonly #platformId = inject(PLATFORM_ID);\r\n  readonly #window = inject(DOCUMENT).defaultView;\r\n\r\n  matchXsScreen$ = this.match$('screen and (min-width: 375px)').pipe(\r\n    startWith(this.#window?.matchMedia('screen and (min-width: 375px)'))\r\n  );\r\n  matchSmScreen$ = this.match$('screen and (min-width: 540px)').pipe(\r\n    startWith(this.#window?.matchMedia('screen and (min-width: 540px)'))\r\n  );\r\n  matchMdScreen$ = this.match$('screen and (min-width: 720px)').pipe(\r\n    startWith(this.#window?.matchMedia('screen and (min-width: 720px)'))\r\n  );\r\n  matchLgScreen$ = this.match$('screen and (min-width: 960px)').pipe(\r\n    startWith({ matches: this.#window?.matchMedia('screen and (min-width: 960px)').matches ?? false }),\r\n  );\r\n  matchXlScreen$ = this.match$('screen and (min-width: 1140px)').pipe(\r\n    startWith(this.#window?.matchMedia('screen and (min-width: 1140px)'))\r\n  );\r\n  match2xlScreen$ = this.match$('screen and (min-width: 1320px)').pipe(\r\n    startWith(this.#window?.matchMedia('screen and (min-width: 1320px)'))\r\n  );\r\n\r\n  /** Stream with the size of the screen\r\n   * @description\r\n   * The screen sizes are the same as in tailwind screens preset.\r\n   * @example\r\n   * this.aplazoMatchMediaService.screenSize$.subscribe((size) => {\r\n   *  console.log(size); // 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl' | '5xl'\r\n   * });\r\n   */\r\n  screenSize$: () => Observable<string> = () => {\r\n    if (!isPlatformBrowser(this.#platformId) || this.#window == null) {\r\n      return of('xs');\r\n    }\r\n    return combineLatest({\r\n      xs: this.matchMedia('screen and (min-width: 375px)'),\r\n      sm: this.matchMedia('screen and (min-width: 540px)'),\r\n      md: this.matchMedia('screen and (min-width: 720px)'),\r\n      lg: this.matchMedia('screen and (min-width: 960px)'),\r\n      xl: this.matchMedia('screen and (min-width: 1140px)'),\r\n      '2xl': this.matchMedia('screen and (min-width: 1320px)'),\r\n      '3xl': this.matchMedia('screen and (min-width: 1440px)'),\r\n      '4xl': this.matchMedia('screen and (min-width: 1680px)'),\r\n      '5xl': this.matchMedia('screen and (min-width: 1920px)'),\r\n    }).pipe(\r\n      map(\r\n        (sizes) =>\r\n          Object.entries(sizes)\r\n            .map(([size, matches]) => (matches ? size : null))\r\n            .filter(Boolean)\r\n            .pop() ?? 'xs'\r\n      )\r\n    );\r\n  };\r\n\r\n  match$(mediaQueryList: MediaQueryScreen): Observable<MediaQueryResult> {\r\n    return this.#window == null\r\n      ? of({ matches: false })\r\n      : fromEvent<MediaQueryListEvent>(\r\n          this.#window.matchMedia(mediaQueryList),\r\n          'change'\r\n        ).pipe(\r\n          map((matchEvent) => ({\r\n            matches: matchEvent.matches\r\n          })),\r\n          shareReplay(1)\r\n        );\r\n  }\r\n\r\n  syncMatch(mediaQueryList: MediaQueryScreen): boolean {\r\n    return this.#window?.matchMedia(mediaQueryList).matches ?? false;\r\n  }\r\n\r\n  private matchMedia(mediaQueryList: MediaQueryScreen) {\r\n    return fromEvent<MediaQueryListEvent>(\r\n      this.#window!.matchMedia(mediaQueryList),\r\n      'change'\r\n    ).pipe(\r\n      startWith(this.#window!.matchMedia(mediaQueryList)),\r\n      map((evt) => evt.matches)\r\n    );\r\n  }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}